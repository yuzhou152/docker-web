---
apiVersion: v1
kind: Namespace
metadata:
  name: myspace                                  # 生成namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep1
  namespace: myspace
  labels:                                        # 跟RC，Service关联对应
    app: dep1-label
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dep1-label
  template:
    metadata:
      labels:
        app: dep1-label
    spec:
      volumes:
      - name: test-volume
        hostPath:
          path: /root/workdir/project/docker-web/dist       # 主机目录
          type: DirectoryOrCreate                           # 如果在给定路径上什么都不存在，那么将根据需要创建空目录
      containers:
      - name: nginx-container
        image: local_image:nginx
        workingDir: /usr/src/dist                    # 容器的工作目录
        ports:                                       # 需要暴露的端口库号列表
        - containerPort: 80                          # 容器需要监听的端口号
        resources:
          limits:                                    # cpu和内存的最大占用
            cpu: '1.50'                              # 1核cpu的处理时间 + 1和cpu处理时间的50%
            memory: "300Mi"                          # 内存限制 300Mi 2Gi
          requests:                                  # cpu和内存的初始化时占用（最小占用）
            cpu: '0.50'                              # 1核cpu处理时间的50%
            memory: "200Mi"
        env:                                         # 容器运行前需设置的环境变量列表
        - name: TEST_ENV                             # 环境变量名称
          value: ENV_VALUE                           # 环境变量的值
        volumeMounts:
        - mountPath: /usr/src/dist                   # 容器目录
          name: test-volume
#        command: ["stress"]                         # 容器的启动命令列表，如不指定，使用打包时使用的启动命令
#        args: ["--vm-bytes", "150M"]                # 容器的启动命令参数列表
---
apiVersion: v1
kind: Service
metadata:
  name: svc1
  namespace: myspace
  labels:
    app: dep1-label
spec:
#  clusterIP: 10.96.0.12                             # 新建一个主机的ip，映射端口到此ip
  type: NodePort                                     # 映射端口到主机
  selector:
    app: dep1-label
  ports:
    - name: p1
      protocol: TCP
      port: 8001                                     # clusterIP模式映射到此port，映射到新建 ip访问 http://10.96.0.12:30007
      targetPort: 80                                 # pod端口
      nodePort: 30007                                # NodePort模式映射到此port，映射到节点主机，默认情况下，会从某个范围内分配一个端口号（默认：30000-32767） 访问 http://localhost:30007